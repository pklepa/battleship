{"version":3,"sources":["assets/images/port.svg","components/Header/index.js","factories/ship.js","factories/gameboard.js","factories/player.js","components/Cell/index.js","components/Board/index.js","components/Ship/index.js","components/Harbour/index.js","components/Scoreboard/index.js","components/MessageBoard/index.js","components/Game/index.js","pages/Home/index.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","d","transform","_ref3","_ref4","_ref5","_ref","svgRef","title","props","fill","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","Header","className","style","backgroundColor","borderRadius","padding","Ship","ship","shipName","name","filter","s","_","capitalize","body","Array","determineShip","orientation","isSunk","reduce","prev","curr","getName","getLength","getBody","getOrientation","changeOrientation","randomizeOrientation","random","Math","floor","hit","position","Gameboard","placedFleet","board","map","isEmpty","wasAttacked","placeShip","positionArray","newBoard","cloneDeep","row","col","isValidPositionForShip","rowOffset","colOffset","shipIndex","shipBodyIndex","shipLength","shipOrientation","isVertical","getRandomUnattackedCoordinates","boardToAnalize","validRow","validCol","shuffledRows","shuffle","shuffledCols","outer","getBoard","getPlacedFleet","placeShipAtRandom","done","getShipAt","cell","receiveAttack","cellAttacked","isGameOver","Player","playerName","fleet","attack","enemyPlayer","getFleet","autoPlaceAll","forEach","getSimplifiedBoard","Cell","cellObj","onClick","showShips","occupied","attacked","show","classList","Board","disableBoard","j","horizontalOrientation","isSelected","styleHorizontal","display","gridTemplateColumns","gap","marginBottom","opacity","styleVertical","gridTemplateRows","marginLeft","c","Harbour","shipsToLoad","shipsLoaded","prepareManualPlace","handleAutoPlace","handleResetPlacement","handleHarbourRotation","useState","setHorizontalOrientation","flexDirection","horizontalShips","setHorizontalShips","selectedShip","setSelectedShip","handleClick","Scoreboard","MessageBoard","Game","player","setPlayer","computer","setComputer","turn","setTurn","gameStart","setGameStart","gameOver","setGameOver","currentShip","setCurrentShip","update","setUpdate","endTurn","lastPlayer","alert","nextTurn","useEffect","setTimeout","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcf74b52.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path-1_42_\",\n  d: \"m148.781 261.84c8.253 11.004 8.253 28.844 0 39.847-8.253 11.004-21.633 11.004-29.886 0s-8.253-28.844 0-39.847 21.634-11.003 29.886 0\",\n  transform: \"translate(3.927 8.902)\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path-1_41_\",\n  d: \"m331.929 261.84c8.253 11.004 8.253 28.844 0 39.847-8.253 11.004-21.633 11.004-29.886 0s-8.253-28.844 0-39.847 21.633-11.003 29.886 0\",\n  transform: \"translate(10.427 8.902)\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m436.735 394.47c-29.951 0-45.649 8.365-59.49 15.739-12.534 6.673-23.347 12.437-46.268 12.437s-33.735-5.765-46.241-12.437c-13.854-7.374-29.552-15.739-59.504-15.739-29.924 0-45.594 8.365-59.421 15.753-12.492 6.659-23.292 12.423-46.172 12.423-22.866 0-33.652-5.765-46.145-12.423-13.827-7.388-29.497-15.753-59.407-15.753-7.786 0-14.087 6.301-14.087 14.088s6.301 14.088 14.088 14.088c22.866 0 33.652 5.765 46.145 12.424 13.827 7.388 29.497 15.753 59.407 15.753 29.924 0 45.608-8.365 59.435-15.753 12.492-6.659 23.292-12.424 46.158-12.424 22.921 0 33.721 5.765 46.241 12.437 13.854 7.374 29.552 15.739 59.504 15.739 29.965 0 45.663-8.365 59.517-15.739 12.52-6.673 23.32-12.437 46.241-12.437 7.787 0 14.088-6.301 14.088-14.088s-6.302-14.088-14.089-14.088z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m47.751 370.917c10.289 3.078 18.377 7.194 25.745 11.13 2.36 1.257 4.669 2.428 6.999 3.589-10.086-42.932-36.6-127.883-48.604-165.714 76.77-22.316 180.134-50.795 193.52-50.864 13.387.069 116.751 28.548 193.52 50.864-11.997 37.811-38.492 122.692-48.588 165.645 2.296-1.145 4.575-2.296 6.901-3.534 7.386-3.935 15.502-8.054 25.831-11.13 10.46-38.528 28.962-99.608 47.073-156.167 1.156-3.605.812-7.539-.963-10.896-1.789-3.357-4.843-5.847-8.489-6.92-8.453-2.48-26.046-7.612-47.594-13.772h1.367v-112.706c0-7.787-6.301-14.088-14.088-14.088h-70.441v-42.265c0-7.787-6.301-14.088-14.088-14.088h-140.882c-7.787 0-14.088 6.301-14.088 14.088v42.265h-70.441c-7.787 0-14.088 6.301-14.088 14.088v112.706h1.367c-21.549 6.16-39.142 11.292-47.594 13.772-3.646 1.073-6.7 3.563-8.489 6.92-1.775 3.357-2.119 7.292-.963 10.896 18.112 56.566 36.618 117.657 47.077 156.181zm36.779-286.388h70.441c7.787 0 14.088-6.301 14.088-14.088v-42.265h112.706v42.265c0 7.787 6.301 14.088 14.088 14.088h70.441v91.011c-57.108-16.071-126.302-34.658-140.882-34.658s-83.775 18.587-140.882 34.658z\"\n});\n\nvar SvgPort = function SvgPort(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"current\",\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 450.823 450.823\",\n    height: 512,\n    viewBox: \"0 0 450.823 450.823\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPort, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/port.d96e83b8.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport \"./index.css\";\nimport { ReactComponent as Logo } from \"../../assets/images/port.svg\";\n\nfunction Header() {\n  const style = {\n    width: 45,\n    height: 45,\n    backgroundColor: \"fdcb9e\",\n    borderRadius: 50,\n    padding: 5,\n  };\n\n  return (\n    <header>\n      <div className=\"logo\">\n        <Logo style={style} fill=\"#1b262c\" />\n        <h1>battleship</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import _ from \"lodash\";\n\n// Ship Factory function\nfunction Ship(ship) {\n  const { name, body, length } = determineShip(ship);\n\n  let orientation = \"horizontal\";\n\n  const getName = () => name;\n  const getBody = () => body;\n  const getLength = () => length;\n  const getOrientation = () => orientation;\n  const changeOrientation = () =>\n    (orientation = orientation === \"horizontal\" ? \"vertical\" : \"horizontal\");\n  const randomizeOrientation = () => {\n    let random = Math.floor(Math.random() * 2);\n    orientation = random ? \"vertical\" : \"horizontal\";\n\n    return orientation;\n  };\n\n  function determineShip(shipName) {\n    const shipList = [\n      {\n        name: \"Destroyer\",\n        length: 2,\n      },\n      {\n        name: \"Submarine\",\n        length: 3,\n      },\n      {\n        name: \"Cruiser\",\n        length: 3,\n      },\n      {\n        name: \"Battleship\",\n        length: 4,\n      },\n      {\n        name: \"Carrier\",\n        length: 5,\n      },\n    ];\n\n    const ship = shipList.filter((s) => {\n      return s.name === _.capitalize(shipName);\n    })[0];\n\n    ship.body = Array(ship.length).fill(false);\n\n    return ship;\n  }\n\n  function hit(position) {\n    body[position] = true;\n\n    return isSunk();\n  }\n\n  function isSunk() {\n    const isSunk = body.reduce((prev, curr) => {\n      return prev && curr;\n    }, true);\n\n    return isSunk;\n  }\n\n  return {\n    getName,\n    getLength,\n    getBody,\n    getOrientation,\n    changeOrientation,\n    randomizeOrientation,\n    hit,\n    isSunk,\n  };\n}\n\nexport default Ship;\n","import _ from \"lodash\";\n\n// Gameboard Factory\nfunction Gameboard() {\n  let placedFleet = [];\n\n  // This declaration using .map() is necessary (as in contrast of nesting Array(10).fill(Array(10.fill('')))) as it ensures each row is a separate, independent array, not a reference for the first\n  let board = Array(10)\n    .fill(0)\n    .map(() =>\n      Array(10)\n        .fill(0)\n        .map(() => {\n          return {\n            isEmpty: true,\n            wasAttacked: false,\n          };\n        })\n    );\n\n  const getBoard = () => board;\n  const getPlacedFleet = () => placedFleet;\n\n  // Returns false for an invalid position and true for a valid position\n  function placeShip(Ship, positionArray) {\n    // cloneDeep allows for a true copy of an array of arrays ([[], []])\n    const newBoard = _.cloneDeep(board);\n    const [row, col] = positionArray;\n\n    const valid = isValidPositionForShip(\n      positionArray,\n      Ship.getLength(),\n      Ship.getOrientation()\n    );\n\n    if (valid) {\n      placedFleet = [...placedFleet, Ship];\n\n      let rowOffset = 0;\n      let colOffset = 0;\n      for (let i = 0; i < Ship.getLength(); i++) {\n        if (Ship.getOrientation() === \"vertical\") rowOffset = i;\n        else colOffset = i;\n\n        newBoard[row + rowOffset][col + colOffset] = {\n          isEmpty: false,\n          wasAttacked: false,\n          shipName: Ship.getName(),\n          shipIndex: placedFleet.length - 1,\n          shipBodyIndex: i,\n        };\n      }\n\n      board = _.cloneDeep(newBoard);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function placeShipAtRandom(Ship) {\n    let positionArray;\n    let done = false;\n\n    while (!done) {\n      positionArray = getRandomUnattackedCoordinates(board);\n      done = isValidPositionForShip(\n        positionArray,\n        Ship.getLength(),\n        Ship.getOrientation()\n      );\n    }\n\n    placeShip(Ship, positionArray);\n  }\n\n  function isValidPositionForShip(positionArray, shipLength, shipOrientation) {\n    const [row, col] = positionArray;\n    const isVertical = shipOrientation === \"vertical\";\n\n    // Test if the ship placement is out of bounds\n    if (col + shipLength > 10 && !isVertical) return false;\n    if (row + shipLength > 10 && isVertical) return false;\n\n    // Test if the ship will fall onto an occupied spot\n    let rowOffset = 0;\n    let colOffset = 0;\n    for (let i = 0; i < shipLength; i++) {\n      if (isVertical) rowOffset = i;\n      else colOffset = i;\n\n      let cell = board[row + rowOffset][col + colOffset];\n      if (cell.isEmpty) continue;\n      else return false;\n    }\n\n    // If all is well, return true\n    return true;\n  }\n\n  function getShipAt(positionArray) {\n    const [row, col] = positionArray;\n    const cell = board[row][col];\n\n    const ship = placedFleet[cell.shipIndex];\n\n    return ship;\n  }\n\n  function receiveAttack(positionArray) {\n    const [row, col] = positionArray || getRandomUnattackedCoordinates(board);\n\n    const cellAttacked = board[row][col];\n\n    if (cellAttacked.wasAttacked) return false;\n    else cellAttacked.wasAttacked = true;\n\n    if (!cellAttacked.isEmpty) {\n      let ship = placedFleet[cellAttacked.shipIndex];\n      ship.hit(cellAttacked.shipBodyIndex);\n    }\n\n    return true;\n  }\n\n  function getRandomUnattackedCoordinates(boardToAnalize) {\n    let validRow, validCol;\n    let shuffledRows = _.shuffle([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    let shuffledCols = _.shuffle([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    outer: for (const row of shuffledRows) {\n      for (const col of shuffledCols) {\n        if (!boardToAnalize[row][col].wasAttacked) {\n          validRow = row;\n          validCol = col;\n\n          break outer;\n        }\n      }\n    }\n\n    return [validRow, validCol];\n  }\n\n  function isGameOver() {\n    const isGameOver = placedFleet\n      .map((ship) => ship.isSunk())\n      .reduce((prev, curr) => prev && curr, true);\n\n    return isGameOver;\n  }\n\n  return {\n    getBoard,\n    getPlacedFleet,\n    placeShip,\n    placeShipAtRandom,\n    getShipAt,\n    receiveAttack,\n    isGameOver,\n  };\n}\n\nexport default Gameboard;\n","import Ship from \"./ship\";\nimport Gameboard from \"./gameboard\";\n\nfunction Player(playerName) {\n  const name = playerName;\n  const {\n    getBoard,\n    getPlacedFleet,\n    placeShip,\n    placeShipAtRandom,\n    getShipAt,\n    receiveAttack,\n    isGameOver,\n  } = Gameboard();\n\n  const fleet = [\n    Ship(\"Carrier\"),\n    Ship(\"Battleship\"),\n    Ship(\"Cruiser\"),\n    Ship(\"Submarine\"),\n    Ship(\"Destroyer\"),\n  ];\n\n  function getFleet() {\n    return fleet;\n  }\n\n  function attack(enemyPlayer, positionArray) {\n    return enemyPlayer.receiveAttack(positionArray);\n  }\n\n  function autoPlaceAll() {\n    const placedFleet = this.getPlacedFleet();\n    const unplacedFleet = fleet.filter((ship) => {\n      return placedFleet.indexOf(ship) === -1;\n    });\n\n    unplacedFleet.forEach((s) => {\n      s.randomizeOrientation();\n      this.placeShipAtRandom(s);\n    });\n  }\n\n  function getSimplifiedBoard() {\n    let simpleBoard = this.getBoard().map((row) => {\n      return row.map((cell) => {\n        if (cell.wasAttacked && cell.isEmpty) return \".\";\n        if (cell.wasAttacked && !cell.isEmpty) return \"*\";\n        if (cell.isEmpty === true) return 0;\n        else return cell.shipName;\n      });\n    });\n\n    return simpleBoard;\n  }\n\n  return {\n    name,\n    attack,\n    receiveAttack,\n    getBoard,\n    getFleet,\n    getPlacedFleet,\n    placeShip,\n    placeShipAtRandom,\n    getShipAt,\n    isGameOver,\n    autoPlaceAll,\n    getSimplifiedBoard,\n  };\n}\n\nexport default Player;\n\n// module.exports = Player;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nfunction Cell(props) {\n  const { cellObj, onClick, position, showShips } = props;\n\n  const occupied = cellObj.isEmpty ? \"\" : \"occupied\";\n  const attacked = cellObj.wasAttacked ? \"attacked\" : \"\";\n  const show = showShips ? \"show\" : \"\";\n\n  let fill = \"\";\n  if (attacked) {\n    if (occupied) fill = \"close\";\n    else fill = \"lens\";\n  }\n\n  const classList = `cell ${occupied} ${attacked} ${show}`;\n\n  return (\n    <div className={classList} onClick={() => onClick(position)}>\n      <p>{fill}</p>\n    </div>\n  );\n}\n\nexport default Cell;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nimport Cell from \"../Cell\";\n\nfunction Board(props) {\n  const { name, board, onClick, showShips, disableBoard } = props;\n\n  return (\n    <div className=\"board-container\">\n      <div className={`board-overlay ${disableBoard ? \"\" : \"hidden\"}`}></div>\n\n      <div className=\"gameboard\">\n        {board.map((row, i) => {\n          return row.map((cell, j) => {\n            return (\n              <Cell\n                key={j}\n                cellObj={cell}\n                onClick={onClick}\n                position={[i, j]}\n                showShips={showShips}\n              />\n            );\n          });\n        })}\n      </div>\n\n      <div className=\"board-footer\">\n        <h1>{name}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React from \"react\";\n\nimport \"./index.css\";\nimport Cell from \"../Cell\";\n\nfunction Ship(props) {\n  const { length, horizontalOrientation, onClick, isSelected } = props;\n\n  const body = Array(length).fill(\"\");\n\n  const styleHorizontal = {\n    display: \"grid\",\n    gridTemplateColumns: `repeat(${length}, 34px)`,\n    height: 34,\n    gap: 2,\n    marginBottom: 20,\n    opacity: isSelected ? 0.4 : 1,\n  };\n\n  const styleVertical = {\n    display: \"grid\",\n    gridTemplateRows: `repeat(${length}, 34px)`,\n    width: 34,\n    gap: 2,\n    marginLeft: 20,\n    opacity: isSelected ? 0.4 : 1,\n  };\n\n  return (\n    <div\n      style={horizontalOrientation ? styleHorizontal : styleVertical}\n      className=\"ship-component\"\n      onClick={onClick}\n    >\n      {body.map((c, i) => {\n        return (\n          <Cell\n            key={i}\n            cellObj={{ isEmpty: false, wasAttacked: false }}\n            onClick={() => {}}\n            showShips={true}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Ship;\n","import React, { useState } from \"react\";\n\nimport \"./index.css\";\nimport Ship from \"../Ship\";\n\nfunction Harbour(props) {\n  const {\n    shipsToLoad,\n    shipsLoaded,\n    prepareManualPlace,\n    handleAutoPlace,\n    handleResetPlacement,\n    handleHarbourRotation,\n  } = props;\n  const [horizontalOrientation, setHorizontalOrientation] = useState(true);\n  const [horizontalShips, setHorizontalShips] = useState({\n    flexDirection: \"column\",\n  });\n  const [selectedShip, setSelectedShip] = useState(false);\n\n  function rotateShipsDisplay() {\n    setHorizontalOrientation(!horizontalOrientation);\n    setHorizontalShips(\n      horizontalOrientation ? {} : { flexDirection: \"column\" }\n    );\n\n    handleHarbourRotation();\n  }\n\n  function handleClick(ship) {\n    // If the clicked ship is placed on the board already, ignore click\n    if (shipsLoaded.indexOf(ship) > -1) return;\n\n    if (selectedShip === ship) setSelectedShip(false);\n    else setSelectedShip(ship);\n\n    prepareManualPlace(ship);\n  }\n\n  return (\n    <div className=\"harbour-container\">\n      <div style={horizontalShips} className=\"ships\">\n        {shipsToLoad.map((ship, i) => {\n          return (\n            <Ship\n              key={i}\n              horizontalOrientation={horizontalOrientation}\n              length={ship.getLength()}\n              onClick={() => handleClick(ship)}\n              isSelected={\n                selectedShip === ship || shipsLoaded.indexOf(ship) > -1\n              }\n            />\n          );\n        })}\n      </div>\n      <div className=\"buttons\">\n        <button onClick={rotateShipsDisplay}>rotate</button>\n        <button onClick={handleAutoPlace}>auto place</button>\n        <button onClick={handleResetPlacement}>reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Harbour;\n","import React from \"react\";\n\nimport \"./index.css\";\nimport Ship from \"../Ship\";\n\nfunction Scoreboard(props) {\n  const { shipsLoaded } = props;\n\n  return (\n    <div className=\"scoreboard-container\">\n      <div className=\"scoreboard-ships\">\n        {shipsLoaded.map((ship, i) => {\n          return (\n            <div key={i} className=\"scoreboard-ship\">\n              <h1>{ship.getName()}</h1>\n\n              <div\n                className={`ship-overlay ${ship.isSunk() ? \"\" : \"hidden\"}`}\n              ></div>\n\n              <Ship\n                horizontalOrientation={true}\n                length={ship.getLength()}\n                onClick={() => {}}\n                isSelected={false}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nfunction MessageBoard(props) {\n  return (\n    <div className=\"scroller\">\n      <p>Welcome to Battleship!</p>\n      <br></br>\n      <p>\n        To start playing, position your fleet by clicking in one of the ships in\n        the left side, then clicking on the desired position on the grid (or try\n        auto-place!).\n      </p>\n    </div>\n  );\n}\n\nexport default MessageBoard;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./index.css\";\n\nimport Player from \"../../factories/player\";\nimport Board from \"../Board\";\nimport Harbour from \"../Harbour\";\nimport Scoreboard from \"../Scoreboard\";\nimport MessageBoard from \"../MessageBoard\";\n\nfunction Game() {\n  const [player, setPlayer] = useState(Player(\"Player\"));\n  const [computer, setComputer] = useState(Player(\"Computer\"));\n  const [turn, setTurn] = useState();\n  const [gameStart, setGameStart] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentShip, setCurrentShip] = useState(false);\n\n  // This update state is necessary hack because React doesnt update the DOM for changes in nested values, as it is the case for changes in players\n  const [update, setUpdate] = useState(true);\n\n  function startGame() {\n    if (gameStart) {\n      handleResetPlacement();\n      return;\n    }\n\n    if (player.getFleet().length !== player.getPlacedFleet().length) return;\n\n    setGameStart(true);\n\n    computer.autoPlaceAll();\n    setComputer(computer);\n\n    setTurn(player.name);\n    setGameOver(false);\n  }\n\n  function endTurn(lastPlayer) {\n    if (lastPlayer.isGameOver() === true) {\n      setGameOver(true);\n      alert(\n        `Game over - ${\n          lastPlayer === player ? computer.name : player.name\n        } won!`\n      );\n    } else {\n      const nextTurn =\n        lastPlayer.name === player.name ? computer.name : player.name;\n      setTurn(nextTurn);\n    }\n  }\n\n  function handlePlayerAttack(position) {\n    if (turn !== player.name) return;\n\n    if (computer.receiveAttack(position)) {\n      setComputer(computer);\n      endTurn(player);\n    }\n  }\n\n  function handleComputerAttack() {\n    player.receiveAttack();\n    setPlayer(player);\n    endTurn(computer);\n  }\n\n  function handleResetPlacement() {\n    setPlayer(Player(player.name));\n    setComputer(Player(computer.name));\n\n    setGameOver(false);\n    setGameStart(false);\n    setUpdate(!update);\n  }\n\n  function handleAutoPlace() {\n    player.autoPlaceAll();\n\n    setPlayer(player);\n    setUpdate(!update);\n  }\n\n  function prepareManualPlace(ship) {\n    if (!currentShip) setCurrentShip(ship);\n    else setCurrentShip(false);\n  }\n\n  function handleManualPlace(position) {\n    if (currentShip) {\n      if (player.placeShip(currentShip, position)) setCurrentShip(false);\n    }\n  }\n\n  function handleHarbourRotation() {\n    player.getFleet().map((ship) => ship.changeOrientation());\n  }\n\n  // Alternates turns between player and COM\n  useEffect(() => {\n    if (turn === computer.name && gameOver === false) {\n      setTimeout(() => handleComputerAttack(), 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [turn]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <MessageBoard />\n      </div>\n      <div className=\"game-wrapper\">\n        {gameStart ? (\n          <Scoreboard shipsLoaded={player.getFleet()} />\n        ) : (\n          <Harbour\n            shipsToLoad={player.getFleet()}\n            shipsLoaded={player.getPlacedFleet()}\n            prepareManualPlace={prepareManualPlace}\n            handleAutoPlace={handleAutoPlace}\n            handleResetPlacement={handleResetPlacement}\n            handleHarbourRotation={handleHarbourRotation}\n          />\n        )}\n\n        <Board\n          name={player.name}\n          board={player.getBoard()}\n          onClick={handleManualPlace}\n          showShips={true}\n          disableBoard={gameStart ? turn === player.name : false}\n        />\n        <Board\n          name={computer.name}\n          board={computer.getBoard()}\n          onClick={handlePlayerAttack}\n          showShips={gameOver ? true : false}\n          disableBoard={gameStart ? turn === computer.name : true}\n        />\n        <Scoreboard shipsLoaded={computer.getFleet()} />\n      </div>\n      <div className=\"game-footer\">\n        <button onClick={startGame}>{gameStart ? \"Restart\" : \"Start\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\n\nimport \"./index.css\";\n\nimport Header from \"../../components/Header\";\nimport Game from \"../../components/Game\";\n\nfunction Home() {\n  return (\n    <div id=\"page-home\">\n      <div className=\"content\">\n        <Header />\n        <Game />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./assets/styles/global.css\";\nimport \"./assets/styles/reset.css\";\nimport \"./assets/fonts/fonts.css\";\n\nimport Home from \"./pages/Home\";\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n"],"sourceRoot":""}